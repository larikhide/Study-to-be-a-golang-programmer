package main

import "fmt"

func main() {
	//создаются 2 neбуфферизированных канала
	naturals := make(chan int)
	squares := make(chan int)

	//генерируются простые числа до бесконечности и отправляются в канал
	go func() {
		for x := 0; ; x++ {
			// отправление в небуферизированный канал блокирует горутину
			// пока другая горутина не выполнит получение из этого канала
			naturals <- x
		}

	}()

	// возведение в квадрат
	go func() {
		for {
			// получение значения из канала и присвоение его в  х
			// первая горутина при этом разблокируется, т.к. происходит высвобождение канала naturals
			x := <-naturals
			// в канал отправляется значение х*х
			// горутина блокируется, пока не произойдет отправка значения
			squares <- x * x
		}
	}()

	for {
		// чтения из канала, он остаётся после этого пустой
		// поэтому происходит разблокировка второй горутины, продолжается цикл
		fmt.Println(<-squares)
	}
}
