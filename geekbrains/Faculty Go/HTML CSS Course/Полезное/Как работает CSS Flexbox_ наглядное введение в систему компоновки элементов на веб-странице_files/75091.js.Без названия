const monthsList=['января','февраля','марта','апреля','мая','июня','июля','августа','сентября','октября','ноября','декабря']
const cardTypes={FULL:0,SHORT:1}
const icons={calendar:'icon-calendar',videocam:'icon-videocam',money:'icon-money',location:'icon-location',online:'icon-globe',award:'icon-award-1',user:'icon-user',users:'icon-users',flash:'icon-flash-1',cap:'icon-graduation-cap'}
const numberFormat=function(number,decimals,dec_point,thousands_sep){var i,j,kw,kd,km
if(isNaN((decimals=Math.abs(decimals)))){decimals=2}
if(dec_point==undefined){dec_point=','}
if(thousands_sep==undefined){thousands_sep='.'}
i=parseInt((number=(+number||0).toFixed(decimals)))+''
if((j=i.length)>3){j=j%3}else{j=0}
km=j?i.substr(0,j)+thousands_sep:''
kw=i.substr(j).replace(/(\d{3})(?=\d)/g,'$1'+thousands_sep)
kd=decimals?dec_point+
Math.abs(number-i).toFixed(decimals).replace(/-/,0).slice(2):''
return km+kw+kd}
const getIcon=function(name=''){if(isEmpty(name))return ''
let iconClass=icons[name]
let icon=document.createElement('i')
icon.className='tp-card-icon '+iconClass
return icon}
const createCard=function(data,cardType=cardTypes.FULL){let a=document.createElement('a')
a.className='tp-card-a'
a.href=data.link
let card=document.createElement('article')
card.className='tp-card box'
let cardThumbnail=document.createElement('div')
cardThumbnail.className='tp-card-thumbnail'
let thumbnail=document.createElement('img')
thumbnail.dataset.lazyType='image'
thumbnail.dataset.src=data.meta.thumbnail.url
thumbnail.dataset.srcset=data.meta.thumbnail.srcset
cardThumbnail.appendChild(thumbnail)
let cardItem=document.createElement('div')
cardItem.className='tp-card-item'
if(cardType===cardTypes.SHORT){cardItem.className=cardItem.className+' tp-short-card'}
let itemLeft=document.createElement('div')
itemLeft.className='tp-card-item-left'
let itemRight=document.createElement('div')
itemRight.className='tp-card-item-right'
let itemTitle=document.createElement('h2')
itemTitle.className='tp-card-title'
itemTitle.innerHTML=data.title
let image=document.createElement('img')
image.dataset.lazyType='image'
image.className='tp-card-image'
image.dataset.src=data.meta.logo.url
image.dataset.srcset=data.meta.logo.srcset
let metaTop=document.createElement('div')
metaTop.className='tp-card-meta'
let metaTopList=document.createElement('ul')
let metaBottom=document.createElement('div')
metaBottom.className='tp-card-meta'
let metaBottomList=document.createElement('ul')
let date=document.createElement('li')
let dateFormat=formatLevelUpDate(data.meta.event_start_date,data.meta.event_end_date,data.meta.event_period,data.meta.event_online_start_time,data.meta.event_type,data.meta.is_course)
if(!isEmpty(dateFormat)){date.innerHTML=dateFormat
date.prepend(getIcon('calendar'))
metaTopList.appendChild(date)}
let price=document.createElement('li')
let priceFormat=formateLevelupPrice(data.meta.event_price_start,data.meta.event_price_end,data.meta.currency_price,data.meta.event_free)
if(!isEmpty(priceFormat)){price.innerHTML=priceFormat
price.prepend(getIcon('money'))
metaBottomList.appendChild(price)}
let online=false
let online_broadcast=false
let city=''
if(!isEmpty(data.meta.event_city)&&Array.isArray(data.meta.event_city)){if(data.meta.event_city.length>0){city=formatLevelupCity(data.meta.event_city)
online=false}else{online=true}}else{online=true}
let location=document.createElement('li')
let locationIcon='location'
if(isEmpty(city)){location.innerHTML='Онлайн'
locationIcon='online'}else{if(data.meta.event_online){locationIcon='online'
city+=' и онлайн'}
location.innerHTML=city}
location.prepend(getIcon(locationIcon))
metaTopList.appendChild(location)
if(data.meta.event_online_broadcast){online_broadcast=true}
if(online_broadcast&&!online){let online_broadcast_item=document.createElement('li')
online_broadcast_item.innerHTML='Будет онлайн трансляция'
online_broadcast_item.prepend(getIcon('videocam'))
metaBottomList.appendChild(online_broadcast_item)}
metaBottom.appendChild(metaBottomList)
metaTop.appendChild(metaTopList)
itemLeft.appendChild(image)
itemRight.appendChild(itemTitle)
itemRight.appendChild(metaTop)
itemRight.appendChild(metaBottom)
if(data.meta.event_type){let isRegularMeta=false
let metaBottomRegular=document.createElement('div')
metaBottomRegular.className='tp-card-meta'
let metaBottomRegularList=document.createElement('ul')
if(data.meta.event_certificate>0){isRegularMeta=true
let eventCertificate=document.createElement('li')
certificateText=''
if(data.meta.event_certificate==1)
certificateText='Есть платный сертификат'
if(data.meta.event_certificate==2)
certificateText='Есть бесплатный сертификат'
eventCertificate.innerHTML=certificateText
eventCertificate.prepend(getIcon('cap'))
metaBottomRegularList.appendChild(eventCertificate)}
let authors=data.meta.event_course_author
if(!isEmpty(authors)&&authors.length>0){isRegularMeta=true
let authorsContent=''
let authorsLegth=authors.length
let authorsCount=1
authors.forEach(author=>{authorsContent+=author.name
if(authorsCount<authorsLegth)authorsContent+=', '
authorsCount++})
let authorElement=document.createElement('li')
authorElement.innerHTML=authorsContent
let authorIcon='user'
if(authorsLegth>1)authorIcon='users'
authorElement.prepend(getIcon(authorIcon))
metaBottomRegularList.appendChild(authorElement)}
if(isRegularMeta){metaBottomRegular.appendChild(metaBottomRegularList)
itemRight.appendChild(metaBottomRegular)}}
let tags=data.meta.tags
if(tags&&tags.length>0){let tagLegth=tags.length
let tagCount=1
let tagList=document.createElement('ul')
tagList.classList='tp-card-meta-tag-list'
let tagListItems=document.createElement('li')
tags.forEach(tag=>{let tagItem=document.createElement('span')
tagItem.dataset.text=tag.name
tagItem.dataset.type='tag'
let tagContent=tag.name
if(tagCount<tagLegth)tagContent+=', '
tagCount++
tagItem.innerHTML=tagContent
tagListItems.appendChild(tagItem)})
let metaTags=document.createElement('div')
metaTags.className='tp-card-meta'
tagList.appendChild(tagListItems)
metaTags.appendChild(tagList)
itemRight.appendChild(metaTags)}
if(cardType===cardTypes.FULL){cardItem.appendChild(itemLeft)}
cardItem.appendChild(itemRight)
card.appendChild(a)
if(cardType===cardTypes.FULL){card.appendChild(cardThumbnail)}
card.appendChild(cardItem)
return card}
const isEmpty=function(e){switch(e){case '':case 0:case '0':case null:case false:case undefined:case typeof this=='undefined':return true
default:return false}}
const getParamsFromUrlType=function(params){return getParamsString(params)}
const getUrlParam=function(key,value){if(!isEmpty(key)&&!isEmpty(value)&&value!=''){let val=value
if(key==='tag')val=encodeURIComponent(value)
return '&'+key+'='+val}
return ''}
const getParamsString=function(params,toUpdate=false){let url=''
let paramsIndex=0
Object.entries(params).forEach(([key,value],index,array)=>{url+=getUrlParam(key,value)
paramsIndex++
if(paramsIndex>=array.length){if(toUpdate){if(url.indexOf('&')===0){url=url.substr(1,url.length)}
url='?'+url
return url}else{return url.trim('&')}}})
return url}
const updateUrl=function(params){let url=getParamsString(params,true)
window.history.pushState(null,null,url)}
const formatLevelUpDate=function(start_date,end_date,period,start_time,is_regular,is_course){if(!isEmpty(start_date)){var event_start_date=new Date(start_date.substring(0,4),parseInt(start_date.substring(4,6))-1,start_date.substring(6,8),0,0,0)}
if(!isEmpty(end_date)){var event_end_date=new Date(end_date.substring(0,4),parseInt(end_date.substring(4,6))-1,end_date.substring(6,8),0,0,0)}
let month_name=monthsList
let start_date_result=''
let end_date_result=''
let empty_start_date=false
let empty_end_date=false
let short_dash=false
let end_event=false
let current_year=new Date().getFullYear()
let differenceDays=0
let result=''
if(isEmpty(event_start_date))empty_start_date=true
if(isEmpty(event_end_date))empty_end_date=true
if(empty_start_date==false&&empty_end_date==false){if(event_start_date.getTime()>event_end_date.getTime()){let temp_date=event_end_date
event_end_date=event_start_date
event_start_date=temp_date}
let start_date_year=event_start_date.getFullYear()
let start_date_month=event_start_date.getMonth()
let start_date_day=event_start_date.getDate()
let end_date_year=event_end_date.getFullYear()
let end_date_month=event_end_date.getMonth()
let end_date_day=event_end_date.getDate()
if(start_date_month>=end_date_month){start_date_result=start_date_day
short_dash=true}else{start_date_result=start_date_day+' '+month_name[start_date_month]}
if(end_date_year>current_year){end_date_result=end_date_day+' '+month_name[end_date_month]+' '+end_date_year}else{end_date_result=end_date_day+' '+month_name[end_date_month]}
if(end_date_year>start_date_year){short_dash=false
start_date_result=start_date_day+
' '+
month_name[start_date_month]+
' '+
start_date_year
end_date_result=end_date_day+' '+month_name[end_date_month]+' '+end_date_year}
if(period&&period!=''){if(start_date_year>current_year){start_date_result=start_date_result=start_date_day+
' '+
month_name[start_date_month]+
' '+
start_date_year}else{start_date_result=start_date_day+' '+month_name[start_date_month]}
result='Старт '+start_date_result+', '+period}
differenceDays=Math.ceil(Math.abs(event_end_date.getTime()-event_start_date.getTime())/(1000*3600*24))
if(result==''||!is_course){if(event_start_date.getTime()!=event_end_date.getTime()){if(short_dash==true){result=start_date_result+'–'+end_date_result}else{result=start_date_result+' – '+end_date_result}}else{result=end_date_result}
let now=new Date()
let today=new Date(now.getFullYear(),now.getMonth(),now.getDate()).valueOf()
if(event_end_date.getTime().valueOf()<today){end_event=true}}}
if(empty_start_date==true&&empty_end_date==false){let dateYear=event_end_date.getFullYear()
let dateMonth=event_end_date.getMonth()
let dateDay=event_end_date.getDate()
if(event_end_date>current_year){start_date_result=dateDay+' '+month_name[dateMonth]+' '+dateYear}else{start_date_result=dateDay+' '+month_name[dateMonth]}
if(result==''){result=start_date_result}}
if(empty_start_date==false&&empty_end_date==true){let start_date_year=event_start_date.getFullYear()
let start_date_month=event_start_date.getMonth()
let start_date_day=event_start_date.getDate()
if(start_date_year>current_year){start_date_result=start_date_day+
' '+
month_name[start_date_month]+
' '+
start_date_year}else{start_date_result=start_date_day+' '+month_name[start_date_month]}
if(period&&period!=''){result='Старт '+start_date_result+', '+period}
if(result==''){result=start_date_result}}
if(start_time&&start_time!=''&&differenceDays<1){result+=' в '+start_time}
if(is_regular){result='Постоянный доступ'}
if(end_event==true||isEmpty(result)){let end_event_text='Уже закончилось'
if(result!=''){result+=','
end_event_text=' уже закончилось'}
end_levelup_text=end_event_text
end_event=true
let end_event_result=" <span class='end_event_text'>"+end_event_text+'</span>'
result+=end_event_result}
return result}
const formatLevelupCity=function(city_list){let defaultCity='любое место с Интернетом'
if(isEmpty(city_list)&&!Array.isArray(city_list))return ''
let index_count=1
let length=city_list.length
let city=''
city_list.forEach(c=>{city+=c.name
if(index_count<length)city+=', '
index_count++})
return city}
var formateLevelupPrice=function(start_price,end_price,currency,free){let price=''
let event_price_start=0
let event_price_end=0
if(!isEmpty(start_price)||!isEmpty(start_price)){if(parseInt(start_price)>=10000)
event_price_start=numberFormat(start_price,0,'',String.fromCharCode(8239))
else event_price_start=start_price
price=event_price_start}
if(!isEmpty(end_price)||!isEmpty(end_price)){if(parseInt(end_price)>=10000)
event_price_end=numberFormat(end_price,0,'',String.fromCharCode(8239))
else event_price_end=end_price
if(isEmpty(price)){price='От 0 до '+event_price_end}else{price+='–'+event_price_end}}
if(!isEmpty(price)){if(!isEmpty(currency)){price=price+String.fromCharCode(160)+currency}else{price=price+String.fromCharCode(160)+'₽'}}
if(free==true){price=' Беcплатно'}
return price}